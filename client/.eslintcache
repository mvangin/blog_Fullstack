[{"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js":"2","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx":"3","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/SignUp.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Logout.jsx":"6","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx":"7","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx":"8","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx":"9","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/CommentCreate.jsx":"10","/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js":"11","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js":"12","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Login.jsx":"13","/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js":"14"},{"size":75,"mtime":1607402468920,"results":"15","hashOfConfig":"16"},{"size":1238,"mtime":1607642016758,"results":"17","hashOfConfig":"16"},{"size":1454,"mtime":1607920340629,"results":"18","hashOfConfig":"16"},{"size":2516,"mtime":1607631863115,"results":"19","hashOfConfig":"16"},{"size":1544,"mtime":1607906080582,"results":"20","hashOfConfig":"16"},{"size":710,"mtime":1607321264545,"results":"21","hashOfConfig":"16"},{"size":2424,"mtime":1607479096493,"results":"22","hashOfConfig":"16"},{"size":1053,"mtime":1607920655316,"results":"23","hashOfConfig":"16"},{"size":621,"mtime":1607321003003,"results":"24","hashOfConfig":"16"},{"size":1345,"mtime":1607455433020,"results":"25","hashOfConfig":"16"},{"size":1209,"mtime":1608085907604,"results":"26","hashOfConfig":"16"},{"size":297,"mtime":1607642168353,"results":"27","hashOfConfig":"16"},{"size":2311,"mtime":1608064712955,"results":"28","hashOfConfig":"16"},{"size":141,"mtime":1607028531746,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1iejoef",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js",[],["70","71"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js",[],["72","73"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx",[],["74","75"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx",["76"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\n\n\nfunction PostList() {\n\n    const [posts, setPosts] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        async function fetchData() {\n            await api.getAllPosts().then(postsRes => {\n                let data = postsRes.data.data\n                let publishedData = data.filter(dataItem => dataItem.published ===true)\n                //let data = postsRes.data.data\n                setPosts(publishedData)\n                setIsLoading(false);\n            })\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <div className=\"d-flex justify-content-center justify-content-md-around flex-wrap text-center\">\n                {\n                    posts.map((item) => {\n                        return (\n                            <Card key={nanoid()} style={{ width: '18rem', margin: '10px' }}>\n                                <Card.Body>\n                                    <Card.Header><b>{item.title} </b></Card.Header>\n                                    <Card.Title> </Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\n                                        {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                                    </Card.Subtitle>\n\n                                    <Link className=\"text-white\" to={`/posts/${item._id}`} >\n                                        <Button>\n                                            See More\n                                            </Button>\n                                    </Link>\n                                    \n\n\n                                </Card.Body>\n\n                            </Card>\n\n                            /*  <div key={nanoid()}>\n                                   <Link to={`/posts/${item._id}`}> <b> {item.title}  </b></Link>\n                           : {item.content}. {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                               </div>\n                               */\n                        )\n                    })\n\n                }\n            </div>\n        </div>\n\n    )\n\n}\n\n\nexport default PostList\n\n\n","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/SignUp.jsx",["77","78","79","80","81","82","83"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Redirect } from 'react-router-dom';\nimport '../styles/styles.css'\n\n\n\nfunction SignUp({handleLogin}) {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [submitted, setSubmitted] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (username.trim() == \"\" || password.trim() == \"\") {\n            return\n        }\n        e.preventDefault();\n        api.signUp({ username, password })\n        handleLogin(true)\n    }\n\n    return (\n        <>\n        <div className=\"bodyContainer\">\n            \n            {/*submitted ? <Redirect to=\"/login\" /> : null*/}\n\n            <div className=\"formContainer\">\n                <form onSubmit={handleSubmit} className=\"form\">\n                    <label className=\"formLabel\">\n                        <input className=\"formInput\" type=\"text\" value={username} placeholder=\"Username\" onChange={(e) => { setUsername(e.target.value) }} />\n                    </label>\n\n\n                    <label className=\"formLabel\">\n                        <input className=\"formInput\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\n                    </label>\n\n                    <input className=\"formInput submit\" type=\"submit\" value=\"Sign up\"/>\n\n                </form>\n            </div>\n        </div>\n    </>\n    )\n\n}\n\nexport default SignUp","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Logout.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx",["84","85","86"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport CommentCreate from \"./CommentCreate\"\n\nfunction Post({ match, user }) {\n\n    const [post, setPost] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n    let postID = match.params.id\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPost(res.data.posts);\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <div className='postContainer'>\n                <div className=\"sizeContainer\">\n                    <div>\n                        <h1><b> {post.title}  </b>  </h1>\n\n                        <div className=\"postAuthor\">\n                            By <i> {post.username ? post.username.username : null} </i>\n                        </div>\n                        <br />\n                        {post.content}\n                    </div>\n\n                    <div>\n                        <CommentCreate user={user} postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <div className=\"allCommentsContainer\">\n                        <b> Comments </b>\n\n                        <div>\n                            {\n                                comments.map(comment => {\n                                    return <div key={nanoid()} className=\"commentContainer\">\n                                        <img src=\"/avatar.jpg\" style={{ width: \"20px\" }} alt=\"avatar\" />\n                                        {comment.username ?\n                                            <span>\n                                                <b>  {comment.username.username} </b>\n                                            </span>\n                                            : null}\n                                        <div className=\"commentContent\"> {comment.content} </div>\n                                    </div>\n                                })\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx",["87"],"import React, { useEffect, useState } from 'react'\nimport Login from \"./Login\"\nimport SignUp from \"./SignUp\"\nimport '../styles/styles.css'\n\n\nfunction LoginSignup({setUser}) {\n\n    const [login, setLogin] = useState(true);\n    function handleLogin() {\n        setLogin(true)\n    }\n\n    function handleSignup() {\n        setLogin(false)\n    }\n    return (\n        <div className=\"loginSignupCont\">\n            <div className=\"loginSignupBorder\">\n                <div className=\"userContainer\">\n                    <div onClick={() => handleLogin()} className=\"userChoice\">\n                        {login ? <h4>  <u> Login </u></h4> : <h4> Login </h4>}\n                    </div>\n                    <div onClick={() => handleSignup()} className=\"userChoice\">\n                        {login ? <h4 > Sign up</h4> : <h4 ><u> Sign up </u> </h4>}\n                    </div>\n                </div>\n                {login ? <Login setUser={setUser} /> : <SignUp handleLogin={handleLogin}  />}\n            </div>\n        </div>\n    )\n}\n\nexport default LoginSignup","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx",[],["88","89"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/CommentCreate.jsx",["90","91"],"import React, { useState } from 'react'\nimport api from '../api'\nimport { useHistory, Link } from \"react-router-dom\"\n\nfunction CommentCreate({ postID, fetchData, user }) {\n\n    const history = useHistory();\n\n    const [content, setContent] = useState(\"\");\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        e.preventDefault();\n        if (content.trim() == \"\") {\n            return\n        }\n\n        let username = localStorage.getItem('id')\n        let payload = { content, username, postID }\n        console.log(payload)\n        api.commentCreate(postID, payload)\n            .then(() => fetchData())\n        setContent(\"\");\n    }\n\n    return (\n\n        <form onSubmit={handleSubmit} className=\"createComment\" >\n\n            <textarea placeholder=\"Enter your comment here...\" className=\"commentInput\" type=\"text\" value={content} onChange={(e) => { setContent(e.target.value); }} />\n\n            {user ?\n                <div>\n                    <button type=\"submit\" className=\"commentSubmit\"> Leave a comment </button>\n                </div>\n                :\n\n                <Link to=\"/login\" >\n                    <button className=\"commentSubmit\"> \n                        Please login to comment\n                    </button>\n                </Link>\n            }\n\n        </form>\n    )\n}\n\nexport default CommentCreate",["92","93"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js",[],["94","95"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Login.jsx",["96","97","98","99"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { useHistory } from 'react-router-dom';\nimport '../styles/styles.css'\nimport jwt_decode from \"jwt-decode\";\n\n\n\nfunction Login({ setUser }) {\n    const history = useHistory();\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(null)\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        e.preventDefault();\n        if (username.trim() == \"\" || password.trim() == \"\") {\n            return\n        }\n        api.login({ username, password })\n            .then(data => {\n                if (data.data.error){\n                    setError(data.data.error)\n                }\n                 else {\n                    let id = data.data.id;\n                    localStorage.setItem(\"token\", data.data.token)\n                    localStorage.setItem(\"id\", id)\n                    history.push(`/posts`);\n\n                    if (localStorage.getItem(\"token\") !== null) {\n                        let token = localStorage.getItem(\"token\");\n                        setUser(jwt_decode(token).name);\n                    } else {\n                        return null;\n                    }\n                }\n            })\n    }\n\n    return (\n        <>\n            <div className=\"bodyContainer\">\n\n                <div className=\"formContainer\">\n                    <form onSubmit={handleSubmit} className=\"form\">\n                    {error ? <div className=\"loginError\"> {error} </div> : null}\n\n                        <label className=\"formLabel\">\n                            <input className=\"formInput\" type=\"text\" value={username} placeholder=\"Username\" onChange={(e) => { setUsername(e.target.value) }} />\n                        </label>\n\n\n                        <label className=\"formLabel\">\n                            <input className=\"formInput\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\n                        </label>\n\n\n                        <input className=\"formInput submit\" type=\"submit\" value=\"Login\" />\n\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n\n}\n\nexport default Login","/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"100","replacedBy":"106"},{"ruleId":"102","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":13,"column":12,"nodeType":"110","messageId":"111","endLine":13,"endColumn":21},{"ruleId":"108","severity":1,"message":"112","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"113","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"108","severity":1,"message":"114","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":18},{"ruleId":"108","severity":1,"message":"115","line":13,"column":12,"nodeType":"110","messageId":"111","endLine":13,"endColumn":21},{"ruleId":"108","severity":1,"message":"116","line":13,"column":23,"nodeType":"110","messageId":"111","endLine":13,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":17,"column":29,"nodeType":"119","messageId":"120","endLine":17,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":17,"column":54,"nodeType":"119","messageId":"120","endLine":17,"endColumn":56},{"ruleId":"108","severity":1,"message":"121","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":11,"column":12,"nodeType":"110","messageId":"111","endLine":11,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":27,"column":8,"nodeType":"124","endLine":27,"endColumn":10,"suggestions":"125"},{"ruleId":"108","severity":1,"message":"112","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"100","replacedBy":"126"},{"ruleId":"102","replacedBy":"127"},{"ruleId":"108","severity":1,"message":"128","line":7,"column":11,"nodeType":"110","messageId":"111","endLine":7,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":15,"column":28,"nodeType":"119","messageId":"120","endLine":15,"endColumn":30},{"ruleId":"100","replacedBy":"129"},{"ruleId":"102","replacedBy":"130"},{"ruleId":"100","replacedBy":"131"},{"ruleId":"102","replacedBy":"132"},{"ruleId":"108","severity":1,"message":"112","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"113","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":20,"column":29,"nodeType":"119","messageId":"120","endLine":20,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":20,"column":54,"nodeType":"119","messageId":"120","endLine":20,"endColumn":56},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],["133"],["134"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'nanoid' is defined but never used.","'Redirect' is defined but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["135"],["133"],["134"],"'history' is assigned a value but never used.",["133"],["134"],["133"],["134"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [fetchData]",{"range":"138","text":"139"},[732,734],"[fetchData]"]