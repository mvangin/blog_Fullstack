[{"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js":"2","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx":"3","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostCreate.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostUpdate.jsx":"6","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/SignUp.jsx":"7","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Logout.jsx":"8","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx":"9","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx":"10","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx":"11","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/CommentCreate.jsx":"12","/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js":"13","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js":"14","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Login.jsx":"15","/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js":"16"},{"size":75,"mtime":1607402468920,"results":"17","hashOfConfig":"18"},{"size":1440,"mtime":1607285534516,"results":"19","hashOfConfig":"18"},{"size":1695,"mtime":1607322226231,"results":"20","hashOfConfig":"18"},{"size":2371,"mtime":1607447425381,"results":"21","hashOfConfig":"18"},{"size":1405,"mtime":1607321871933,"results":"22","hashOfConfig":"18"},{"size":200,"mtime":1606709034578,"results":"23","hashOfConfig":"18"},{"size":1500,"mtime":1607153287086,"results":"24","hashOfConfig":"18"},{"size":710,"mtime":1607321264545,"results":"25","hashOfConfig":"18"},{"size":2072,"mtime":1607448718176,"results":"26","hashOfConfig":"18"},{"size":1052,"mtime":1607285855908,"results":"27","hashOfConfig":"18"},{"size":621,"mtime":1607321003003,"results":"28","hashOfConfig":"18"},{"size":1345,"mtime":1607455433020,"results":"29","hashOfConfig":"18"},{"size":1650,"mtime":1607447104269,"results":"30","hashOfConfig":"18"},{"size":397,"mtime":1607153542163,"results":"31","hashOfConfig":"18"},{"size":1969,"mtime":1607285791852,"results":"32","hashOfConfig":"18"},{"size":141,"mtime":1607028531746,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1iejoef",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js",[],["75","76"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx",[],["77","78"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx",["79"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\n\n\nfunction PostList() {\n\n    const [posts, setPosts] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        async function fetchData() {\n            await api.getAllPosts().then(postsRes => {\n                let data = postsRes.data.data\n                setPosts(data)\n                setIsLoading(false);\n            })\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <div className=\"d-flex justify-content-center justify-content-md-around flex-wrap text-center\">\n                {\n                    posts.map((item) => {\n                        return (\n                            <Card key={nanoid()} style={{ width: '18rem', margin: '10px' }}>\n                                <Card.Body>\n                                    <Card.Header><b>{item.title} </b></Card.Header>\n                                    <Card.Title> </Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\n                                        {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                                    </Card.Subtitle>\n\n                                    <Link className=\"text-white\" to={`/posts/${item._id}`} >\n                                        <Button>\n                                            See More\n                                            </Button>\n                                    </Link>\n                                    \n\n\n                                </Card.Body>\n\n                            </Card>\n\n                            /*  <div key={nanoid()}>\n                                   <Link to={`/posts/${item._id}`}> <b> {item.title}  </b></Link>\n                           : {item.content}. {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                               </div>\n                               */\n                        )\n                    })\n\n                }\n            </div>\n        </div>\n\n    )\n\n}\n\n\nexport default PostList\n\n\n",["80","81"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostCreate.jsx",["82","83"],"import React, { useState, useEffect } from \"react\";\nimport api from '../api'\nimport { useHistory } from \"react-router-dom\"\n\n\nfunction PostCreate() {\n    const history = useHistory();\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    let username = localStorage.getItem('id')\n\n    useEffect(() => {\n        //api.getPostCreate()\n    }, [])\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (title.trim() == \"\" || content.trim() == \"\") {\n            return\n        }\n\n        api.createPost({ title, content, username })\n            .then(history.push('/posts'))\n    }\n\n    return (\n        <>\n            <div className=\"createPostContainer\">\n                <form onSubmit={handleSubmit} className=\"postForm\">\n                    <label>\n                        <input type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value); }} placeholder=\"title\" className=\"postInput\" />\n                    </label>\n\n\n                    <label>\n                        <textarea rows=\"8\" cols=\"80\" type=\"text\" value={content} onChange={(e) => { setContent(e.target.value); }} placeholder=\"content\" className=\"postInput\" />\n                    </label>\n\n                    <input type=\"submit\" value=\"Create Post\" className=\"postInput submit\" />\n                </form>\n            </div>\n        </>\n    )\n\n}\nexport default PostCreate","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostUpdate.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/SignUp.jsx",["84","85","86","87","88","89","90"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Redirect } from 'react-router-dom';\nimport '../styles/styles.css'\n\n\n\nfunction SignUp({handleLogin}) {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [submitted, setSubmitted] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (username.trim() == \"\" || password.trim() == \"\") {\n            return\n        }\n        e.preventDefault();\n        api.signUp({ username, password })\n        handleLogin(true)\n    }\n\n    return (\n        <>\n        <div className=\"bodyContainer\">\n            \n            {/*submitted ? <Redirect to=\"/login\" /> : null*/}\n\n            <div className=\"formContainer\">\n                <form onSubmit={handleSubmit} className=\"form\">\n                    <label>\n                        <input className=\"formInput\" type=\"text\" value={username} placeholder=\"Username\" onChange={(e) => { setUsername(e.target.value) }} />\n                    </label>\n\n\n                    <label>\n                        <input className=\"formInput\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\n                    </label>\n\n                    <input className=\"formInput submit\" type=\"submit\" value=\"Sign up\"/>\n\n                </form>\n            </div>\n        </div>\n    </>\n    )\n\n}\n\nexport default SignUp","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Logout.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx",["91","92","93"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport CommentCreate from \"./CommentCreate\"\n\nfunction Post({ match }) {\n\n    const [post, setPost] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n    let postID = match.params.id\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPost(res.data.posts);\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <div className='postContainer'>\n                <div className=\"sizeContainer\">\n                    <div>\n                        <h1><b> {post.title}  </b>  </h1> \n\n                        <div className=\"postAuthor\">\n                            By <i> {post.username ? post.username.username : null} </i>\n                        </div>\n                        <br/>\n                        {post.content}\n                    </div>\n\n                    <div>\n                        <CommentCreate postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <div className=\"allCommentsContainer\">\n                        <b> Comments </b>  \n\n                        <div>\n                            {\n                                comments.map(comment => {\n                                    return <div key={nanoid()} className=\"commentContainer\"> <img src=\"/avatar.jpg\" style={{width: \"20px\"}} alt=\"avatar\"/>  {comment.username ? <span> <b>  {comment.username.username} </b> </span> : null}  <div className=\"commentContent\"> {comment.content} </div>  </div>\n                                })\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx",["94"],"import React, { useEffect, useState } from 'react'\nimport Login from \"./Login\"\nimport SignUp from \"./SignUp\"\nimport '../styles/styles.css'\n\n\nfunction LoginSignup({setUser}) {\n\n    const [login, setLogin] = useState(true);\n    function handleLogin() {\n        setLogin(true)\n    }\n\n    function handleSignup() {\n        setLogin(false)\n    }\n    return (\n        <div className=\"loginSignupCont\">\n            <div className=\"loginSignupBorder\">\n                <div className=\"userContainer\">\n                    <div onClick={() => handleLogin()} className=\"userChoice\">\n                        {login ? <h4>  <u> Login </u></h4> : <h4> Login </h4>}\n                    </div>\n                    <div onClick={() => handleSignup()} className=\"userChoice\">\n                        {login ? <h4 > Signup</h4> : <h4 ><u> Sign up </u> </h4>}\n                    </div>\n                </div>\n                {login ? <Login setUser={setUser} /> : <SignUp handleLogin={handleLogin}  />}\n            </div>\n        </div>\n    )\n}\n\nexport default LoginSignup","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/CommentCreate.jsx",["95","96"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Login.jsx",["97","98","99","100"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { useHistory } from 'react-router-dom';\nimport '../styles/styles.css'\nimport jwt_decode from \"jwt-decode\";\n\n\n\nfunction Login({setUser}) {\n    const history = useHistory();\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        e.preventDefault();\n        if (username.trim() == \"\" || password.trim() == \"\") {\n            return\n        }\n        api.login({ username, password })\n            .then(data => {\n                let id = data.data.id;\n                localStorage.setItem(\"token\", data.data.token)\n                localStorage.setItem(\"id\", id)\n                history.push(`/posts`);\n\n                if (localStorage.getItem(\"token\") !== null) {\n                    let token = localStorage.getItem(\"token\");\n                    setUser(jwt_decode(token).name);\n                } else {\n                    return null;\n                }\n\n            })\n    }\n\n    return (\n        <>\n            <div className=\"bodyContainer\">\n               \n                <div className=\"formContainer\">\n                    <form onSubmit={handleSubmit} className=\"form\">\n                        <label>\n                            <input className=\"formInput\" type=\"text\" value={username} placeholder=\"Username\" onChange={(e) => { setUsername(e.target.value) }} />\n                        </label>\n\n\n                        <label>\n                            <input className=\"formInput\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\n                        </label>\n\n\n                        <input className=\"formInput submit\" type=\"submit\" value=\"Login\"/>\n\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n\n}\n\nexport default Login","/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"105"},{"ruleId":"103","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":13,"column":12,"nodeType":"109","messageId":"110","endLine":13,"endColumn":21},{"ruleId":"101","replacedBy":"111"},{"ruleId":"103","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":19,"column":26,"nodeType":"115","messageId":"116","endLine":19,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":19,"column":50,"nodeType":"115","messageId":"116","endLine":19,"endColumn":52},{"ruleId":"107","severity":1,"message":"117","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"118","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":16},{"ruleId":"107","severity":1,"message":"119","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":18},{"ruleId":"107","severity":1,"message":"120","line":13,"column":12,"nodeType":"109","messageId":"110","endLine":13,"endColumn":21},{"ruleId":"107","severity":1,"message":"121","line":13,"column":23,"nodeType":"109","messageId":"110","endLine":13,"endColumn":35},{"ruleId":"113","severity":1,"message":"114","line":17,"column":29,"nodeType":"115","messageId":"116","endLine":17,"endColumn":31},{"ruleId":"113","severity":1,"message":"114","line":17,"column":54,"nodeType":"115","messageId":"116","endLine":17,"endColumn":56},{"ruleId":"107","severity":1,"message":"122","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":11,"column":12,"nodeType":"109","messageId":"110","endLine":11,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":27,"column":8,"nodeType":"125","endLine":27,"endColumn":10,"suggestions":"126"},{"ruleId":"107","severity":1,"message":"117","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"127","line":7,"column":11,"nodeType":"109","messageId":"110","endLine":7,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":15,"column":28,"nodeType":"115","messageId":"116","endLine":15,"endColumn":30},{"ruleId":"107","severity":1,"message":"117","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"118","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":19,"column":29,"nodeType":"115","messageId":"116","endLine":19,"endColumn":31},{"ruleId":"113","severity":1,"message":"114","line":19,"column":54,"nodeType":"115","messageId":"116","endLine":19,"endColumn":56},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],["128"],["129"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar",["128"],["129"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'nanoid' is defined but never used.","'Redirect' is defined but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [fetchData]",{"range":"133","text":"134"},[726,728],"[fetchData]"]