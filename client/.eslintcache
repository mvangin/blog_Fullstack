[{"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js":"2","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx":"3","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/SignUp.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Logout.jsx":"6","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx":"7","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx":"8","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx":"9","/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js":"10","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js":"11","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Login.jsx":"12","/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js":"13","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/CommentCreate.jsx":"14","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/ContactForm.jsx":"15"},{"size":75,"mtime":1607402468920,"results":"16","hashOfConfig":"17"},{"size":1682,"mtime":1608450448789,"results":"18","hashOfConfig":"17"},{"size":2098,"mtime":1608532970791,"results":"19","hashOfConfig":"17"},{"size":2754,"mtime":1608347783699,"results":"20","hashOfConfig":"17"},{"size":2486,"mtime":1608446013282,"results":"21","hashOfConfig":"17"},{"size":350,"mtime":1608450042716,"results":"22","hashOfConfig":"17"},{"size":2633,"mtime":1608452399014,"results":"23","hashOfConfig":"17"},{"size":1089,"mtime":1608451270453,"results":"24","hashOfConfig":"17"},{"size":1576,"mtime":1608532147482,"results":"25","hashOfConfig":"17"},{"size":1298,"mtime":1608533321432,"results":"26","hashOfConfig":"17"},{"size":297,"mtime":1607642168353,"results":"27","hashOfConfig":"17"},{"size":2032,"mtime":1608455101989,"results":"28","hashOfConfig":"17"},{"size":141,"mtime":1607028531746,"results":"29","hashOfConfig":"17"},{"size":1278,"mtime":1608532150550,"results":"30","hashOfConfig":"17"},{"size":2253,"mtime":1608531905760,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"140m20v",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js",[],["64","65"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/SignUp.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Logout.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx",["66","67"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport CommentCreate from \"../components/CommentCreate\"\nimport ReactHtmlParser from 'react-html-parser';\n\n\nfunction Post({ match, user, displayName }) {\n\n    const [post, setPost] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n    let postID = match.params.id\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPost(res.data.posts);\n                console.log(res.data.posts)\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <div className='postContainer container'>\n                <div className=\"sizeContainer\">\n                    <div class=\"postTitleContainer\">\n                        <h1><b> {post.title}  </b>  </h1>\n                        <div className=\"postAuthor\">\n                            By <i> {post.username ? post.username.username : null} </i>\n                        </div>\n                    </div>\n                    <div>\n\n                        <br />\n                        {ReactHtmlParser(post.content)}\n                    </div>\n\n                    <div>\n                        <CommentCreate user={user} displayName={displayName} postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <div className=\"allCommentsContainer\">\n                        <b> Comments </b>\n\n                        <div>\n                            {\n                                comments.map(comment => {\n                                    return <div key={nanoid()} className=\"commentContainer\">\n                                        <img src=\"/avatar.jpg\" style={{ width: \"20px\" }} alt=\"avatar\" />\n                                        {comment.displayName ?\n                                            <span>\n                                                <b>  {comment.displayName} </b>\n                                            </span>\n                                            : null}\n                                        <div className=\"commentContent\"> {comment.content} </div>\n                                    </div>\n                                })\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx",["68"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Login.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/CommentCreate.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/ContactForm.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":12,"column":12,"nodeType":"75","messageId":"76","endLine":12,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":29,"column":8,"nodeType":"79","endLine":29,"endColumn":10,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"81","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":18},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [fetchData]",{"range":"87","text":"88"},[811,813],"[fetchData]"]