[{"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js":"2","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx":"3","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx":"6","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx":"7","/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js":"8","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js":"9","/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js":"10","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/CommentCreate.jsx":"11","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/ContactForm.jsx":"12","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/Logout.jsx":"13","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/Login.jsx":"14","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/SignUp.jsx":"15","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/Shop.js":"16"},{"size":299,"mtime":1608594487608,"results":"17","hashOfConfig":"18"},{"size":1681,"mtime":1608594274624,"results":"19","hashOfConfig":"18"},{"size":3542,"mtime":1610393507301,"results":"20","hashOfConfig":"18"},{"size":3130,"mtime":1609988333322,"results":"21","hashOfConfig":"18"},{"size":2621,"mtime":1608594461743,"results":"22","hashOfConfig":"18"},{"size":1267,"mtime":1608594335633,"results":"23","hashOfConfig":"18"},{"size":2552,"mtime":1609988522210,"results":"24","hashOfConfig":"18"},{"size":1304,"mtime":1609996401211,"results":"25","hashOfConfig":"18"},{"size":187,"mtime":1608594443468,"results":"26","hashOfConfig":"18"},{"size":141,"mtime":1607028531746,"results":"27","hashOfConfig":"18"},{"size":1278,"mtime":1608532150550,"results":"28","hashOfConfig":"18"},{"size":2358,"mtime":1608628587331,"results":"29","hashOfConfig":"18"},{"size":355,"mtime":1608628073691,"results":"30","hashOfConfig":"18"},{"size":1945,"mtime":1608663708710,"results":"31","hashOfConfig":"18"},{"size":2596,"mtime":1608625989394,"results":"32","hashOfConfig":"18"},{"size":1323,"mtime":1608709340130,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"140m20v",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js",[],["72","73"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx",["74","75"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Container from 'react-bootstrap/Container'\n\n\nfunction PostList() {\n\n    const [posts, setPosts] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        async function fetchData() {\n            await api.getAllPosts().then(postsRes => {\n                let data = postsRes.data.data\n                let publishedData = data.filter(dataItem => dataItem.published === true)\n                //let data = postsRes.data.data\n                setPosts(publishedData)\n                setIsLoading(false);\n            })\n        }\n        fetchData();\n    }, [])\n\n    let reducedContent;\n    return (\n        <Container>\n            {\n                isLoading ?\n                    <div className=\"d-flex justify-content-center \">\n                        <Spinner animation=\"border\" role=\"status\" id=\"spinner\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    </div>\n                    :\n                    <div className=\"d-flex justify-content-center justify-content-md-around flex-wrap text-center\">\n                        {\n                            posts.map((item) => {\n                                return (\n                                    <Card key={nanoid()} style={{ width: '18rem', margin: '10px' }}>\n                                        <Card.Body >\n                                            <Card.Header ><b>{item.title} </b></Card.Header>\n                                            <Card.Title> <img src=\"/stockBlog.png\" style={{width:\"100%\"}}/> </Card.Title>\n                                            <Card.Subtitle className=\"mb-2 text-muted\">\n                                                {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                                            </Card.Subtitle>\n\n                                            <Link className=\"text-white\" to={`/posts/${item._id}`} >\n                                                <u className=\"text-dark\">\n                                                    See More\n                                                </u>\n                                            </Link>\n\n\n\n                                        </Card.Body>\n\n                                    </Card>\n\n                                    /*  <div key={nanoid()}>\n                <Link to={`/posts/${item._id}`}> <b> {item.title}  </b></Link>\n                                   : {item.content}. {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n            </div>\n                                       */\n                                )\n                            })\n\n                        }\n                    </div>\n            }\n        </Container >\n    )\n\n}\n\n\nexport default PostList\n\n\n","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx",["76","77"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport {CommentCreate} from \"../components\"\nimport ReactHtmlParser from 'react-html-parser';\n\n\nfunction Post({ match, user, displayName }) {\n\n    const [post, setPost] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n    let postID = match.params.id\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPost(res.data.posts);\n                console.log(res.data.posts)\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <div className='postContainer container'>\n                <div className=\"sizeContainer\">\n                    <div class=\"postTitleContainer\">\n                        <h1><b> {post.title}  </b>  </h1>\n                        <div className=\"postAuthor\">\n                            By <i> {post.username ? post.username.username : null} </i>\n                        </div>\n                    </div>\n                    <div>\n\n                        <br />\n                        {ReactHtmlParser(post.content)}\n                    </div>\n\n                    <div>\n                        <CommentCreate user={user} displayName={displayName} postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <div className=\"allCommentsContainer\">\n                        <b> Comments </b>\n\n                        <div>\n                            {\n                                comments.map(comment => {\n                                    return <div key={nanoid()} className=\"commentContainer\">\n                                        <img src=\"/avatar.jpg\" style={{ width: \"20px\" }} alt=\"avatar\" />\n                                        {comment.displayName ?\n                                            <span>\n                                                <b>  {comment.displayName} </b>\n                                            </span>\n                                            : null}\n                                        <div className=\"commentContent\"> {comment.content} </div>\n                                    </div>\n                                })\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx",["78","79","80","81","82"],"import React from \"react\"\nimport { Link } from 'react-router-dom'\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\n\nimport { faFacebook } from \"@fortawesome/free-brands-svg-icons\"\n\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\"\n\nimport { faInstagram } from \"@fortawesome/free-brands-svg-icons\"\n\n\n\nfunction Homepage({ user }) {\n\n\n    return (\n        <>\n            <Jumbotron fluid style={{ height: \"100vh\", marginBottom: \"0px\", paddingBottom: \"0px\", backgroundImage: \"url(/vesuvius.jpg)\", backgroundRepeat: 'no-repeat', backgroundSize: \"cover\" }}>\n                <div className=\"homepageContainer\">\n                    <div>\n                        <h1>\n                            Welcome to The Conflict Continuum\n                            </h1>\n\n\n\n                        {\n                            user ?\n                                <div className=\"linkContainer\">\n                                    <Link to=\"/posts\" className=\"link\"><button className=\"homeLink\"> View Blogs </button> </Link>\n                                    <Link to=\"/logout\" className=\"link\">  <button className=\"homeLink\">  Logout  </button> </Link>\n                                </div>\n\n\n                                :\n                                <div className=\"linkContainer\">\n                                    <Link to=\"/posts\" className=\"link\"><button className=\"homeLink\"> View Blogs </button> </Link>\n                                    <Link to=\"/login\" className=\"link\">  <button className=\"homeLink\">  Sign In  </button> </Link>\n\n                                </div>\n                        }\n\n                        {/*  <div className=\"linkContainer\">\n                            <a href=\"https://www.facebook.com/conflictarch/\"> <FontAwesomeIcon icon={faFacebook} style={{ fontSize: \"2rem\",  color:\"white\", margin:  \"2rem\" }} /> </a>\n                            <a href=\"https://www.twitter.com/conflictarch/\"> <FontAwesomeIcon icon={faTwitter} style={{ fontSize: \"2rem\", color:\"white\", margin:  \"2rem\" }} /> </a>\n                            <a href=\"https://www.instagram.com/theconflictcontinuum/\"> <FontAwesomeIcon icon={faInstagram} style={{ fontSize: \"2rem\", color:\"white\", margin:  \"2rem\" }} /> </a>\n\n\n                        </div>\n                    */}\n                    </div>\n                </div>\n            </Jumbotron>\n        </>\n    )\n}\n\nexport default Homepage","/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/CommentCreate.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/ContactForm.jsx",["83"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\n\nfunction ContactForm({ show, onHide }) {\n    const [email, setEmail] = useState(\"\")\n    const [subject, setSubject] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n\n    function handleClose() {\n        setEmail(\"\")\n        setSubject(\"\")\n        setContent(\"\")\n        onHide();\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        let payload = { email, subject, content }\n        api.contactPost(payload)\n            .then((response) => {\n                if (response.data.status === 'success') {\n                    setEmail(\"\")\n                    setSubject(\"\")\n                    setContent(\"\")\n                    onHide();\n\n                } else if (response.data.status === 'fail') {\n                    alert(\"Message failed to send.\")\n                }\n            })\n    }\n\n    return (\n        <Modal\n            show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Contact Us\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleSubmit} className=\"contactForm\" >\n                    <label>\n                        <input placeholder=\"Email\" className=\"postInput contactEmail\" value={email} onChange={(e) => { setEmail(e.target.value); }} />\n                    </label>\n                    <label>\n                        <input placeholder=\"Subject\" className=\"postInput contactSubject\" value={subject} onChange={(e) => { setSubject(e.target.value); }} />\n                    </label>\n                    <label>\n                        <textarea placeholder=\"Content\" className=\"postInput contactContent\" value={content} onChange={(e) => { setContent(e.target.value); }} />\n                    </label>\n                </form>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={handleSubmit}>Send!</Button>\n\n                <Button onClick={handleClose}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default ContactForm","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/Logout.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/Login.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/SignUp.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/Shop.js",["84","85"],"import React  from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\n\nfunction Shop({ show, onHide }) {\n\n\n    function handleClose() {\n        onHide();\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n    }\n\n    return (\n        <Modal\n            show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    You are now leaving SnuffleStein Blogs\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"d-flex justify-content-center\">\n                <div className=\"text-center\">\n                    <img src=\"/Shop.png\" alt=\"shopping image\" style={{ width: \"300px\" }} />\n                    <a href=\"https://theconflictcontinuum.com/\">\n                        <h1 className=\"text-dark\">\n                            <u> Go to Store </u>\n                        </h1>\n                    </a>\n                </div>\n\n            </Modal.Body>\n            <Modal.Footer className=\"d-flex justify-content-center\">\n                <Button onClick={handleClose}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default Shop",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":30,"column":9,"nodeType":"92","messageId":"93","endLine":30,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":48,"column":58,"nodeType":"96","endLine":48,"endColumn":108},{"ruleId":"90","severity":1,"message":"97","line":12,"column":12,"nodeType":"92","messageId":"93","endLine":12,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":29,"column":8,"nodeType":"100","endLine":29,"endColumn":10,"suggestions":"101"},{"ruleId":"90","severity":1,"message":"102","line":6,"column":10,"nodeType":"92","messageId":"93","endLine":6,"endColumn":25},{"ruleId":"90","severity":1,"message":"103","line":8,"column":10,"nodeType":"92","messageId":"93","endLine":8,"endColumn":24},{"ruleId":"90","severity":1,"message":"104","line":10,"column":10,"nodeType":"92","messageId":"93","endLine":10,"endColumn":20},{"ruleId":"90","severity":1,"message":"105","line":12,"column":10,"nodeType":"92","messageId":"93","endLine":12,"endColumn":19},{"ruleId":"90","severity":1,"message":"106","line":14,"column":10,"nodeType":"92","messageId":"93","endLine":14,"endColumn":21},{"ruleId":"90","severity":1,"message":"107","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"108","line":13,"column":14,"nodeType":"92","messageId":"93","endLine":13,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":31,"column":21,"nodeType":"96","endLine":31,"endColumn":92},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'reducedContent' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'FontAwesomeIcon' is defined but never used.","'faShoppingCart' is defined but never used.","'faFacebook' is defined but never used.","'faTwitter' is defined but never used.","'faInstagram' is defined but never used.","'useEffect' is defined but never used.","'handleSubmit' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [fetchData]",{"range":"116","text":"117"},[799,801],"[fetchData]"]