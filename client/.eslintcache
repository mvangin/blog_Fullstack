[{"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js":"2","/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx":"3","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/SignUp.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Logout.jsx":"6","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx":"7","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx":"8","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx":"9","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/CommentCreate.jsx":"10","/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js":"11","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js":"12","/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Login.jsx":"13","/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js":"14"},{"size":75,"mtime":1607402468920,"results":"15","hashOfConfig":"16"},{"size":1238,"mtime":1607642016758,"results":"17","hashOfConfig":"16"},{"size":1454,"mtime":1607920340629,"results":"18","hashOfConfig":"16"},{"size":2516,"mtime":1607631863115,"results":"19","hashOfConfig":"16"},{"size":1544,"mtime":1607906080582,"results":"20","hashOfConfig":"16"},{"size":710,"mtime":1607321264545,"results":"21","hashOfConfig":"16"},{"size":2424,"mtime":1607479096493,"results":"22","hashOfConfig":"16"},{"size":1053,"mtime":1607920655316,"results":"23","hashOfConfig":"16"},{"size":621,"mtime":1607321003003,"results":"24","hashOfConfig":"16"},{"size":1345,"mtime":1607455433020,"results":"25","hashOfConfig":"16"},{"size":1066,"mtime":1607642092410,"results":"26","hashOfConfig":"16"},{"size":297,"mtime":1607642168353,"results":"27","hashOfConfig":"16"},{"size":2310,"mtime":1607906013050,"results":"28","hashOfConfig":"16"},{"size":141,"mtime":1607028531746,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1iejoef",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/index.js",[],["63","64"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/app/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/components/NavbarComponent.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/PostList.jsx",["65"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/SignUp.jsx",["66","67","68","69","70","71","72"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Logout.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Post.jsx",["73","74","75"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport CommentCreate from \"./CommentCreate\"\n\nfunction Post({ match, user }) {\n\n    const [post, setPost] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n    let postID = match.params.id\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPost(res.data.posts);\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <div className='postContainer'>\n                <div className=\"sizeContainer\">\n                    <div>\n                        <h1><b> {post.title}  </b>  </h1>\n\n                        <div className=\"postAuthor\">\n                            By <i> {post.username ? post.username.username : null} </i>\n                        </div>\n                        <br />\n                        {post.content}\n                    </div>\n\n                    <div>\n                        <CommentCreate user={user} postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <div className=\"allCommentsContainer\">\n                        <b> Comments </b>\n\n                        <div>\n                            {\n                                comments.map(comment => {\n                                    return <div key={nanoid()} className=\"commentContainer\">\n                                        <img src=\"/avatar.jpg\" style={{ width: \"20px\" }} alt=\"avatar\" />\n                                        {comment.username ?\n                                            <span>\n                                                <b>  {comment.username.username} </b>\n                                            </span>\n                                            : null}\n                                        <div className=\"commentContent\"> {comment.content} </div>\n                                    </div>\n                                })\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n",["76","77"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/LoginSignup.jsx",["78"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Homepage.jsx",[],["79","80"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/CommentCreate.jsx",["81","82"],"import React, { useState } from 'react'\nimport api from '../api'\nimport { useHistory, Link } from \"react-router-dom\"\n\nfunction CommentCreate({ postID, fetchData, user }) {\n\n    const history = useHistory();\n\n    const [content, setContent] = useState(\"\");\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        e.preventDefault();\n        if (content.trim() == \"\") {\n            return\n        }\n\n        let username = localStorage.getItem('id')\n        let payload = { content, username, postID }\n        console.log(payload)\n        api.commentCreate(postID, payload)\n            .then(() => fetchData())\n        setContent(\"\");\n    }\n\n    return (\n\n        <form onSubmit={handleSubmit} className=\"createComment\" >\n\n            <textarea placeholder=\"Enter your comment here...\" className=\"commentInput\" type=\"text\" value={content} onChange={(e) => { setContent(e.target.value); }} />\n\n            {user ?\n                <div>\n                    <button type=\"submit\" className=\"commentSubmit\"> Leave a comment </button>\n                </div>\n                :\n\n                <Link to=\"/login\" >\n                    <button className=\"commentSubmit\"> \n                        Please login to comment\n                    </button>\n                </Link>\n            }\n\n        </form>\n    )\n}\n\nexport default CommentCreate","/home/marcus/Desktop/websites/express-blogAPI/client/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/client/src/pages/Login.jsx",["83","84","85","86"],"/home/marcus/Desktop/websites/express-blogAPI/client/src/index.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":13,"column":12,"nodeType":"93","messageId":"94","endLine":13,"endColumn":21},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":16},{"ruleId":"91","severity":1,"message":"97","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":18},{"ruleId":"91","severity":1,"message":"98","line":13,"column":12,"nodeType":"93","messageId":"94","endLine":13,"endColumn":21},{"ruleId":"91","severity":1,"message":"99","line":13,"column":23,"nodeType":"93","messageId":"94","endLine":13,"endColumn":35},{"ruleId":"100","severity":1,"message":"101","line":17,"column":29,"nodeType":"102","messageId":"103","endLine":17,"endColumn":31},{"ruleId":"100","severity":1,"message":"101","line":17,"column":54,"nodeType":"102","messageId":"103","endLine":17,"endColumn":56},{"ruleId":"91","severity":1,"message":"104","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":11,"column":12,"nodeType":"93","messageId":"94","endLine":11,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":27,"column":8,"nodeType":"107","endLine":27,"endColumn":10,"suggestions":"108"},{"ruleId":"87","replacedBy":"109"},{"ruleId":"89","replacedBy":"110"},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"87","replacedBy":"111"},{"ruleId":"89","replacedBy":"112"},{"ruleId":"91","severity":1,"message":"113","line":7,"column":11,"nodeType":"93","messageId":"94","endLine":7,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":15,"column":28,"nodeType":"102","messageId":"103","endLine":15,"endColumn":30},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":20,"column":29,"nodeType":"102","messageId":"103","endLine":20,"endColumn":31},{"ruleId":"100","severity":1,"message":"101","line":20,"column":54,"nodeType":"102","messageId":"103","endLine":20,"endColumn":56},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'nanoid' is defined but never used.","'Redirect' is defined but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["116"],["114"],["115"],["114"],["115"],"'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [fetchData]",{"range":"119","text":"120"},[732,734],"[fetchData]"]