[{"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx":"2","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js":"3","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js":"6","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js":"7","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx":"8","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx":"9","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx":"10","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js":"11","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/CommentCreate.jsx":"12","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Logout.jsx":"13","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/LoginSignup.jsx":"14","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Login.jsx":"15","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/SignUp.jsx":"16"},{"size":286,"mtime":1608595051580,"results":"17","hashOfConfig":"18"},{"size":2492,"mtime":1608595481996,"results":"19","hashOfConfig":"18"},{"size":1769,"mtime":1608595555410,"results":"20","hashOfConfig":"18"},{"size":2708,"mtime":1608343924311,"results":"21","hashOfConfig":"18"},{"size":2784,"mtime":1608625675702,"results":"22","hashOfConfig":"18"},{"size":141,"mtime":1607445686599,"results":"23","hashOfConfig":"18"},{"size":289,"mtime":1608595509765,"results":"24","hashOfConfig":"18"},{"size":2772,"mtime":1608625594312,"results":"25","hashOfConfig":"18"},{"size":1913,"mtime":1608575697924,"results":"26","hashOfConfig":"18"},{"size":1307,"mtime":1608343479094,"results":"27","hashOfConfig":"18"},{"size":3205,"mtime":1608619058828,"results":"28","hashOfConfig":"18"},{"size":953,"mtime":1608619480151,"results":"29","hashOfConfig":"18"},{"size":275,"mtime":1608596142812,"results":"30","hashOfConfig":"18"},{"size":1033,"mtime":1608595473772,"results":"31","hashOfConfig":"18"},{"size":2080,"mtime":1608624855748,"results":"32","hashOfConfig":"18"},{"size":2369,"mtime":1608624832068,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8hsp1m",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx",["71","72"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport {CommentCreate, Comments} from \"../components\"\nimport { useHistory, Link } from \"react-router-dom\"\nimport ReactHtmlParser from 'react-html-parser';\n\n\n\nfunction Post({ match, setPosts, posts }) {\n\n    const [postItem, setPostItem] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n\n    let postID = match.params.id\n\n    const history = useHistory();\n\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPostItem(res.data.posts);\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    function handlePostDelete() {\n        comments.forEach((comment) => {\n            api.deleteCommentByID(postID, comment._id)\n        })\n\n        api.deletePostByID(postID)\n            .then(() => {\n                setPosts(posts.filter((post => post._id !== postID)));\n                history.push(`/admin/posts`);\n            })\n\n    }\n    return (\n        <>\n            <div className='postContainer'>\n                <div className=\"sizeContainer\">\n                    <div>\n                        <div>\n                            <h1 className=\"postTitle\"><b> {postItem.title}  </b> </h1>\n                            <button className=\"postDelete\" onClick={handlePostDelete}> Delete </button>\n                            <Link to={{ pathname:`/admin/posts/${postItem._id}/update`, state: { postItem }}}>\n                                <button className=\"postUpdate\">\n                                    Update\n                              </button>\n                            </Link>\n                        </div>\n\n                        <div style={{ clear: \"both\" }} className=\"postAuthor\">\n                            By <i> {postItem.username ? postItem.username.username : null} </i>\n                        </div>\n                        <br />\n                        {ReactHtmlParser(postItem.content)}\n                    </div>\n\n                    <div>\n                        <CommentCreate postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <Comments comments={comments} setComments={setComments} />\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n",["73","74"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx",["75"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\n\n\n\nfunction PostList({ setPosts, posts }) {\n\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        async function fetchData() {\n            await api.getAllPosts().then(postsRes => {\n                let data = postsRes.data.data\n                setPosts(data)\n                setIsLoading(false);\n            })\n        }\n        fetchData();\n    }, [])\n\n\n    return (\n        isLoading ?\n            <div className=\"d-flex justify-content-center \">\n                <Spinner animation=\"border\" role=\"status\" id=\"spinner\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>\n            :\n\n            <div className=\"d-flex justify-content-center justify-content-md-around flex-wrap text-center\">\n                {\n                    posts.map((item) => {\n                        return (\n                            <Card key={nanoid()} style={{ width: '18rem', margin: '10px' }}>\n                                <Card.Body>\n                                    <Card.Header><b>{item.title} </b> {item.published ? <div className=\"text-success\"> Published </div> : <div className=\"text-danger\"> Unpublished</div>} </Card.Header>\n                                    <Card.Title> </Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\n                                        {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                                    </Card.Subtitle>\n\n                                    <Link className=\"text-white\" to={`/admin/posts/${item._id}`} >\n                                        <Button>\n                                            See More\n                                            </Button>\n                                    </Link>\n\n\n                                </Card.Body>\n\n                            </Card>\n\n                            /*  <div key={nanoid()}>\n                                   <Link to={`/posts/${item._id}`}> <b> {item.title}  </b></Link>\n                           : {item.content}. {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                               </div>\n                               */\n                        )\n                    })\n\n                }\n            </div >\n\n    )\n\n}\n\n\nexport default PostList\n\n\n","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx",["76","77","78"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js",[],["79","80"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx",["81","82","83","84"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx",["85"],"import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from \"react-bootstrap/Container\"\n\nfunction Homepage({ user }) {\n    return (\n        <>\n            <Jumbotron fluid style={{ height: \"82.9vh\", marginBottom:\"0px\", backgroundImage:\"url(/vesuvius.jpg)\", backgroundRepeat:'no-repeat',backgroundSize:\"cover\"}}>\n                    <div className=\"homepageContainer\">\n                        <div>\n                            <h1>\n                                SnoffleStein Blogs (Admin)\n                            </h1>\n                            {user ?\n                                <div className=\"linkContainer\">\n                                    <Link to=\"/admin/posts\" className=\"link\">  <button className=\"homeLink\">  Posts </button> </Link>\n                                </div>\n                                :\n                                <div className=\"linkContainer\">\n                                    <Link to=\"/admin/login\" className=\"link\">  <button className=\"homeLink\">  Sign In  </button> </Link>\n                                </div>\n                            }\n                        </div>\n                    </div>\n            </Jumbotron>\n\n        </>\n    )\n}\n\nexport default Homepage","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/CommentCreate.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Logout.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/LoginSignup.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Login.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/SignUp.jsx",[],{"ruleId":"86","severity":1,"message":"87","line":13,"column":12,"nodeType":"88","messageId":"89","endLine":13,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":33,"column":8,"nodeType":"92","endLine":33,"endColumn":10,"suggestions":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":26,"column":8,"nodeType":"92","endLine":26,"endColumn":10,"suggestions":"99"},{"ruleId":"86","severity":1,"message":"100","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"101","line":5,"column":9,"nodeType":"88","messageId":"89","endLine":5,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":54,"column":33,"nodeType":"104","messageId":"105","endLine":56,"endColumn":86},{"ruleId":"94","replacedBy":"106"},{"ruleId":"96","replacedBy":"107"},{"ruleId":"86","severity":1,"message":"108","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":22,"column":26,"nodeType":"111","messageId":"112","endLine":22,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":22,"column":50,"nodeType":"111","messageId":"112","endLine":22,"endColumn":52},{"ruleId":"102","severity":1,"message":"103","line":49,"column":33,"nodeType":"104","messageId":"105","endLine":51,"endColumn":86},{"ruleId":"86","severity":1,"message":"113","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":17},"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"React Hook useEffect has a missing dependency: 'setPosts'. Either include it or remove the dependency array. If 'setPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["117"],"'useEffect' is defined but never used.","'nanoid' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString",["115"],["116"],"'ReactHtmlParser' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.",{"desc":"118","fix":"119"},"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [fetchData]",{"range":"122","text":"123"},"Update the dependencies array to be: [setPosts]",{"range":"124","text":"125"},[833,835],"[fetchData]",[688,690],"[setPosts]"]