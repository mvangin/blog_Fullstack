[{"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx":"2","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js":"3","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/SignUp.jsx":"6","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Login.jsx":"7","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js":"8","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js":"9","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx":"10","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx":"11","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx":"12","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js":"13","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Logout.jsx":"14"},{"size":441,"mtime":1607455978205,"results":"15","hashOfConfig":"16"},{"size":2516,"mtime":1608278595500,"results":"17","hashOfConfig":"16"},{"size":1769,"mtime":1608255003010,"results":"18","hashOfConfig":"16"},{"size":2708,"mtime":1608343924311,"results":"19","hashOfConfig":"16"},{"size":2918,"mtime":1608358117490,"results":"20","hashOfConfig":"16"},{"size":1819,"mtime":1608356924437,"results":"21","hashOfConfig":"16"},{"size":2479,"mtime":1608357026197,"results":"22","hashOfConfig":"16"},{"size":141,"mtime":1607445686599,"results":"23","hashOfConfig":"16"},{"size":75,"mtime":1607445686595,"results":"24","hashOfConfig":"16"},{"size":2739,"mtime":1608280842566,"results":"25","hashOfConfig":"16"},{"size":1948,"mtime":1608358469407,"results":"26","hashOfConfig":"16"},{"size":1307,"mtime":1608343479094,"results":"27","hashOfConfig":"16"},{"size":3205,"mtime":1608358547260,"results":"28","hashOfConfig":"16"},{"size":615,"mtime":1607673194752,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"8hsp1m",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js",[],["66","67"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx",["68","69"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport CommentCreate from \"./CommentCreate\"\nimport Comments from \"./Comments\"\nimport { useHistory, Link } from \"react-router-dom\"\nimport ReactHtmlParser from 'react-html-parser';\n\n\n\nfunction Post({ match, setPosts, posts }) {\n\n    const [postItem, setPostItem] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n\n    let postID = match.params.id\n\n    const history = useHistory();\n\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPostItem(res.data.posts);\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    function handlePostDelete() {\n        comments.forEach((comment) => {\n            api.deleteCommentByID(postID, comment._id)\n        })\n\n        api.deletePostByID(postID)\n            .then(() => {\n                setPosts(posts.filter((post => post._id !== postID)));\n                history.push(`/admin/posts`);\n            })\n\n    }\n    return (\n        <>\n            <div className='postContainer'>\n                <div className=\"sizeContainer\">\n                    <div>\n                        <div>\n                            <h1 className=\"postTitle\"><b> {postItem.title}  </b> </h1>\n                            <button className=\"postDelete\" onClick={handlePostDelete}> Delete </button>\n                            <Link to={{ pathname:`/admin/posts/${postItem._id}/update`, state: { postItem }}}>\n                                <button className=\"postUpdate\">\n                                    Update\n                              </button>\n                            </Link>\n                        </div>\n\n                        <div style={{ clear: \"both\" }} className=\"postAuthor\">\n                            By <i> {postItem.username ? postItem.username.username : null} </i>\n                        </div>\n                        <br />\n                        {ReactHtmlParser(postItem.content)}\n                    </div>\n\n                    <div>\n                        <CommentCreate postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <Comments comments={comments} setComments={setComments} />\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n",["70","71"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx",["72"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\n\n\n\nfunction PostList({ setPosts, posts }) {\n\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        async function fetchData() {\n            await api.getAllPosts().then(postsRes => {\n                let data = postsRes.data.data\n                setPosts(data)\n                setIsLoading(false);\n            })\n        }\n        fetchData();\n    }, [])\n\n\n    return (\n        isLoading ?\n            <div className=\"d-flex justify-content-center \">\n                <Spinner animation=\"border\" role=\"status\" id=\"spinner\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>\n            :\n\n            <div className=\"d-flex justify-content-center justify-content-md-around flex-wrap text-center\">\n                {\n                    posts.map((item) => {\n                        return (\n                            <Card key={nanoid()} style={{ width: '18rem', margin: '10px' }}>\n                                <Card.Body>\n                                    <Card.Header><b>{item.title} </b> {item.published ? <div className=\"text-success\"> Published </div> : <div className=\"text-danger\"> Unpublished</div>} </Card.Header>\n                                    <Card.Title> </Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\n                                        {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                                    </Card.Subtitle>\n\n                                    <Link className=\"text-white\" to={`/admin/posts/${item._id}`} >\n                                        <Button>\n                                            See More\n                                            </Button>\n                                    </Link>\n\n\n                                </Card.Body>\n\n                            </Card>\n\n                            /*  <div key={nanoid()}>\n                                   <Link to={`/posts/${item._id}`}> <b> {item.title}  </b></Link>\n                           : {item.content}. {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                               </div>\n                               */\n                        )\n                    })\n\n                }\n            </div >\n\n    )\n\n}\n\n\nexport default PostList\n\n\n",["73","74"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx",["75"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/SignUp.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Login.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx",["76","77"],"import React, { useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\"\nimport api from '../api'\nimport ReactHtmlParser from 'react-html-parser';\nimport { Editor } from \"@tinymce/tinymce-react\";\n\n\nfunction PostUpdate({ match }) {\n    const history = useHistory();\n    let location = useLocation();\n\n    console.log(location)\n    const [title, setTitle] = useState(() => location ? location.state.postItem.title : null);\n    const [content, setContent] = useState(() => location ? location.state.postItem.content : null);\n    const [checked, setChecked] = useState(() => location ? location.state.postItem.published : false);\n\n    let postID = match.params.id\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            return\n        }\n\n        api.updatePostByID(postID, { title, content, checked, postID })\n            .then(\n                history.push(`/admin/posts`)\n            )\n    }\n\n    return (\n        <>\n            <div className=\"container createPostContainer\">\n                <form onSubmit={handleSubmit} className=\"postForm\">\n                    <label>\n                        <input type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value); }} placeholder=\"title\" className=\"postInput\" />\n                    </label>\n\n                    <label>\n                        <Editor init={{\n                            height: 300,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                'undo redo | formatselect | bold italic backcolor | \\\n                                 alignleft aligncenter alignright alignjustify | \\\n                                bullist numlist outdent indent | removeformat | help'\n                        }} apiKey={process.env.REACT_APP_TINYMCE} value={content} onEditorChange={(content) => { setContent(content); }} placeholder=\"content\" className=\"postInput\" />\n                    </label>\n\n\n                    <label className=\"postCheckedContainer\">\n                        Publish\n                        <input type=\"checkbox\" checked={checked} onChange={() => setChecked(!checked)} className=\"postChecked\" />\n                    </label>\n\n                    <input type=\"submit\" value=\"Update Post\" className=\"postInput submit\" />\n                </form>\n            </div>\n        </>\n    )\n\n}\nexport default PostUpdate","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx",["78"],"import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from \"react-bootstrap/Container\"\n\nfunction Homepage({ user }) {\n    return (\n        <>\n            <Jumbotron fluid style={{ height: \"82.9vh\", marginBottom:\"0px\", backgroundImage:\"url(/vesuvius.jpg)\", backgroundRepeat:'no-repeat',backgroundSize:\"cover\"}}>\n                    <div className=\"homepageContainer\">\n                        <div>\n                            <h1>\n                                SnoffleStein Blogs (Admin)\n                            </h1>\n                            {user ?\n                                <div className=\"linkContainer\">\n                                    <Link to=\"/admin/posts\" className=\"link\">  <button className=\"homeLink\">  Posts </button> </Link>\n                                </div>\n                                :\n                                <div className=\"linkContainer\">\n                                    <Link to=\"/admin/login\" className=\"link\">  <button className=\"homeLink\">  Sign In  </button> </Link>\n                                </div>\n                            }\n                        </div>\n                    </div>\n            </Jumbotron>\n\n        </>\n    )\n}\n\nexport default Homepage","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Logout.jsx",[],["79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":14,"column":12,"nodeType":"87","messageId":"88","endLine":14,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":34,"column":8,"nodeType":"91","endLine":34,"endColumn":10,"suggestions":"92"},{"ruleId":"81","replacedBy":"93"},{"ruleId":"83","replacedBy":"94"},{"ruleId":"89","severity":1,"message":"95","line":26,"column":8,"nodeType":"91","endLine":26,"endColumn":10,"suggestions":"96"},{"ruleId":"81","replacedBy":"97"},{"ruleId":"83","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":62,"column":33,"nodeType":"101","messageId":"102","endLine":64,"endColumn":86},{"ruleId":"85","severity":1,"message":"103","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":49,"column":33,"nodeType":"101","messageId":"102","endLine":51,"endColumn":86},{"ruleId":"85","severity":1,"message":"104","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":17},{"ruleId":"81","replacedBy":"105"},{"ruleId":"83","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["109"],["107"],["108"],"React Hook useEffect has a missing dependency: 'setPosts'. Either include it or remove the dependency array. If 'setPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["110"],["107"],["108"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'ReactHtmlParser' is defined but never used.","'Container' is defined but never used.",["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [fetchData]",{"range":"115","text":"116"},"Update the dependencies array to be: [setPosts]",{"range":"117","text":"118"},[857,859],"[fetchData]",[688,690],"[setPosts]"]