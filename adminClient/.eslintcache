[{"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx":"1","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/LoginSignup.jsx":"2","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js":"3","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js":"4","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/SignUp.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx":"6","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js":"7","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js":"8","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx":"9","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Login.jsx":"10","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js":"11","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx":"12","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Comments.jsx":"13","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Logout.jsx":"14","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx":"15","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/CommentCreate.jsx":"16","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx":"17"},{"size":1743,"mtime":1607920292928,"results":"18","hashOfConfig":"19"},{"size":1042,"mtime":1608185078061,"results":"20","hashOfConfig":"19"},{"size":441,"mtime":1607455978205,"results":"21","hashOfConfig":"19"},{"size":75,"mtime":1607445686595,"results":"22","hashOfConfig":"19"},{"size":1867,"mtime":1608190395857,"results":"23","hashOfConfig":"19"},{"size":1816,"mtime":1608185192210,"results":"24","hashOfConfig":"19"},{"size":3205,"mtime":1608190140316,"results":"25","hashOfConfig":"19"},{"size":1714,"mtime":1608192006492,"results":"26","hashOfConfig":"19"},{"size":1920,"mtime":1608185128024,"results":"27","hashOfConfig":"19"},{"size":2593,"mtime":1608191886220,"results":"28","hashOfConfig":"19"},{"size":141,"mtime":1607445686599,"results":"29","hashOfConfig":"19"},{"size":520,"mtime":1607673170548,"results":"30","hashOfConfig":"19"},{"size":1486,"mtime":1607476481649,"results":"31","hashOfConfig":"19"},{"size":615,"mtime":1607673194752,"results":"32","hashOfConfig":"19"},{"size":2449,"mtime":1608184875769,"results":"33","hashOfConfig":"19"},{"size":997,"mtime":1608191857460,"results":"34","hashOfConfig":"19"},{"size":2422,"mtime":1607671101191,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"8hsp1m",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx",[],["75","76"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/LoginSignup.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js",[],["77","78"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js",[],["79","80"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/SignUp.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Login.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Comments.jsx",["81","82","83","84"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Logout.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx",["85","86"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport CommentCreate from \"./CommentCreate\"\nimport Comments from \"./Comments\"\nimport { useHistory, Link } from \"react-router-dom\"\n\n\nfunction Post({ match, setPosts, posts }) {\n\n    const [postItem, setPostItem] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n\n    let postID = match.params.id\n\n    const history = useHistory();\n\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPostItem(res.data.posts);\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    function handlePostDelete() {\n        comments.forEach((comment) => {\n            api.deleteCommentByID(postID, comment._id)\n        })\n\n        api.deletePostByID(postID)\n            .then(() => {\n                setPosts(posts.filter((post => post._id !== postID)));\n                history.push(`/admin/posts`);\n            })\n\n    }\n    return (\n        <>\n            <div className='postContainer'>\n                <div className=\"sizeContainer\">\n                    <div>\n                        <div>\n                            <h1 className=\"postTitle\"><b> {postItem.title}  </b> </h1>\n                            <button className=\"postDelete\" onClick={handlePostDelete}> Delete </button>\n                            <Link to={{ pathname:`/admin/posts/${postItem._id}/update`, state: { postItem }}}>\n                                <button className=\"postUpdate\">\n                                    Update\n                              </button>\n                            </Link>\n                        </div>\n\n                        <div style={{ clear: \"both\" }} className=\"postAuthor\">\n                            By <i> {postItem.username ? postItem.username.username : null} </i>\n                        </div>\n                        <br />\n                        {postItem.content}\n                    </div>\n\n                    <div>\n                        <CommentCreate postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <Comments comments={comments} setComments={setComments} />\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/CommentCreate.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx",["87","88"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\n\n\nfunction PostList({ setPosts, posts }) {\n\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        async function fetchData() {\n            await api.getAllPosts().then(postsRes => {\n                let data = postsRes.data.data\n                setPosts(data)\n                setIsLoading(false);\n            })\n        }\n        fetchData();\n    }, [])\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"d-flex justify-content-center justify-content-md-around flex-wrap text-center\">\n                {\n                    posts.map((item) => {\n                        return (\n                            <Card key={nanoid()} style={{ width: '18rem', margin: '10px' }}>\n                                <Card.Body>\n                        <Card.Header><b>{item.title} </b> {item.published ? <div className=\"text-success\"> Published </div> : <div className=\"text-danger\"> Unpublished</div>} </Card.Header>\n                                    <Card.Title> </Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\n                                        {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                                    </Card.Subtitle>\n\n                                    <Link className=\"text-white\" to={`/admin/posts/${item._id}`} >\n                                        <Button>\n                                            See More\n                                            </Button>\n                                    </Link>\n\n\n                                </Card.Body>\n\n                            </Card>\n\n                            /*  <div key={nanoid()}>\n                                   <Link to={`/posts/${item._id}`}> <b> {item.title}  </b></Link>\n                           : {item.content}. {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                               </div>\n                               */\n                        )\n                    })\n\n                }\n            </div>\n        </div>\n\n    )\n\n}\n\n\nexport default PostList\n\n\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"89","replacedBy":"95"},{"ruleId":"91","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"102","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":21},{"ruleId":"97","severity":1,"message":"103","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":20},{"ruleId":"97","severity":1,"message":"104","line":12,"column":12,"nodeType":"99","messageId":"100","endLine":12,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":32,"column":8,"nodeType":"107","endLine":32,"endColumn":10,"suggestions":"108"},{"ruleId":"97","severity":1,"message":"104","line":12,"column":12,"nodeType":"99","messageId":"100","endLine":12,"endColumn":21},{"ruleId":"105","severity":1,"message":"109","line":25,"column":8,"nodeType":"107","endLine":25,"endColumn":10,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],["111"],["112"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CommentCreate' is defined but never used.","'useHistory' is defined but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'setPosts'. Either include it or remove the dependency array. If 'setPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [fetchData]",{"range":"119","text":"120"},"Update the dependencies array to be: [setPosts]",{"range":"121","text":"122"},[807,809],"[fetchData]",[642,644],"[setPosts]"]