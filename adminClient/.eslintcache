[{"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx":"2","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js":"3","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js":"6","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js":"7","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx":"8","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx":"9","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx":"10","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js":"11","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/CommentCreate.jsx":"12","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Logout.jsx":"13","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/LoginSignup.jsx":"14"},{"size":286,"mtime":1608595051580,"results":"15","hashOfConfig":"16"},{"size":2492,"mtime":1608595481996,"results":"17","hashOfConfig":"16"},{"size":1769,"mtime":1608595555410,"results":"18","hashOfConfig":"16"},{"size":2708,"mtime":1608343924311,"results":"19","hashOfConfig":"16"},{"size":2918,"mtime":1608358117490,"results":"20","hashOfConfig":"16"},{"size":141,"mtime":1607445686599,"results":"21","hashOfConfig":"16"},{"size":289,"mtime":1608595509765,"results":"22","hashOfConfig":"16"},{"size":2739,"mtime":1608280842566,"results":"23","hashOfConfig":"16"},{"size":1913,"mtime":1608575697924,"results":"24","hashOfConfig":"16"},{"size":1307,"mtime":1608343479094,"results":"25","hashOfConfig":"16"},{"size":3205,"mtime":1608595703532,"results":"26","hashOfConfig":"16"},{"size":984,"mtime":1608454206165,"results":"27","hashOfConfig":"16"},{"size":275,"mtime":1608596142812,"results":"28","hashOfConfig":"16"},{"size":1033,"mtime":1608595473772,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8hsp1m",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx",["66","67"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx",["68"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\n\n\n\nfunction PostList({ setPosts, posts }) {\n\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        async function fetchData() {\n            await api.getAllPosts().then(postsRes => {\n                let data = postsRes.data.data\n                setPosts(data)\n                setIsLoading(false);\n            })\n        }\n        fetchData();\n    }, [])\n\n\n    return (\n        isLoading ?\n            <div className=\"d-flex justify-content-center \">\n                <Spinner animation=\"border\" role=\"status\" id=\"spinner\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>\n            :\n\n            <div className=\"d-flex justify-content-center justify-content-md-around flex-wrap text-center\">\n                {\n                    posts.map((item) => {\n                        return (\n                            <Card key={nanoid()} style={{ width: '18rem', margin: '10px' }}>\n                                <Card.Body>\n                                    <Card.Header><b>{item.title} </b> {item.published ? <div className=\"text-success\"> Published </div> : <div className=\"text-danger\"> Unpublished</div>} </Card.Header>\n                                    <Card.Title> </Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\n                                        {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                                    </Card.Subtitle>\n\n                                    <Link className=\"text-white\" to={`/admin/posts/${item._id}`} >\n                                        <Button>\n                                            See More\n                                            </Button>\n                                    </Link>\n\n\n                                </Card.Body>\n\n                            </Card>\n\n                            /*  <div key={nanoid()}>\n                                   <Link to={`/posts/${item._id}`}> <b> {item.title}  </b></Link>\n                           : {item.content}. {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                               </div>\n                               */\n                        )\n                    })\n\n                }\n            </div >\n\n    )\n\n}\n\n\nexport default PostList\n\n\n",["69","70"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx",["71"],"import React, { useState, useEffect } from \"react\";\nimport api from '../api'\nimport { Redirect } from \"react-router-dom\"\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport {nanoid} from \"nanoid\"\n\n\n\nfunction PostCreate() {\n\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [checked, setChecked] = useState(false);\n    const [errors, setErrors] = useState(false)\n    const [loaded, setLoaded] = useState(false);\n    let username = localStorage.getItem('id');\n\n\n\n\n    useEffect(() => {\n        //api.getPostCreate()\n    }, [])\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        api.createPost({ title, content, username, checked })\n            .then(data => {\n                if (data.data.error) {\n                    setErrors(data.data.error)\n                } else {\n                    setLoaded(true)\n                }\n                //.then(history.push('/posts'))\n            })\n    }\n\n    return (\n\n        <>\n            {loaded ? <Redirect to='/admin/posts' /> : null}\n\n            <div className=\"createPostContainer\">\n                <form onSubmit={handleSubmit} className=\"postForm\">\n                    {errors ? errors.map(error => (<li key={nanoid()} className=\"errors\"> {error.msg} </li>)) : null}\n\n                    <label>\n                        <input type=\"text\" onChange={(e) => { setTitle(e.target.value); }} placeholder=\"title\" className=\"postInput\" />\n                    </label>\n\n                    <label>\n                        <Editor init={{\n                            height: 300,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                'undo redo | formatselect | bold italic backcolor | \\\n                                 alignleft aligncenter alignright alignjustify | \\\n                                bullist numlist outdent indent | removeformat | help'\n                        }}\n                            apiKey=\"izb6wun1mfx6s4yw07jgv1cha30fjzeyuzsc9npti5tlo8hk\" value={content} onEditorChange={(content) => { setContent(content); }} placeholder=\"content\" className=\"postInput\" />\n                    </label>\n\n                    <label className=\"postCheckedContainer\">\n                        Publish\n                        <input type=\"checkbox\" checked={checked} onChange={() => setChecked(!checked)} className=\"postChecked\" />\n                    </label>\n\n\n                    <input type=\"submit\" value=\"Create Post\" className=\"postInput submit\" />\n                </form>\n            </div>\n        </>\n    )\n\n}\nexport default PostCreate",["72","73"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js",[],["74","75"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx",["76","77"],"import React, { useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\"\nimport api from '../api'\nimport ReactHtmlParser from 'react-html-parser';\nimport { Editor } from \"@tinymce/tinymce-react\";\n\n\nfunction PostUpdate({ match }) {\n    const history = useHistory();\n    let location = useLocation();\n\n    console.log(location)\n    const [title, setTitle] = useState(() => location ? location.state.postItem.title : null);\n    const [content, setContent] = useState(() => location ? location.state.postItem.content : null);\n    const [checked, setChecked] = useState(() => location ? location.state.postItem.published : false);\n\n    let postID = match.params.id\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            return\n        }\n\n        api.updatePostByID(postID, { title, content, checked, postID })\n            .then(\n                history.push(`/admin/posts`)\n            )\n    }\n\n    return (\n        <>\n            <div className=\"container createPostContainer\">\n                <form onSubmit={handleSubmit} className=\"postForm\">\n                    <label>\n                        <input type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value); }} placeholder=\"title\" className=\"postInput\" />\n                    </label>\n\n                    <label>\n                        <Editor init={{\n                            height: 300,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                'undo redo | formatselect | bold italic backcolor | \\\n                                 alignleft aligncenter alignright alignjustify | \\\n                                bullist numlist outdent indent | removeformat | help'\n                        }} apiKey={process.env.REACT_APP_TINYMCE} value={content} onEditorChange={(content) => { setContent(content); }} placeholder=\"content\" className=\"postInput\" />\n                    </label>\n\n\n                    <label className=\"postCheckedContainer\">\n                        Publish\n                        <input type=\"checkbox\" checked={checked} onChange={() => setChecked(!checked)} className=\"postChecked\" />\n                    </label>\n\n                    <input type=\"submit\" value=\"Update Post\" className=\"postInput submit\" />\n                </form>\n            </div>\n        </>\n    )\n\n}\nexport default PostUpdate","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx",["78"],"import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from \"react-bootstrap/Container\"\n\nfunction Homepage({ user }) {\n    return (\n        <>\n            <Jumbotron fluid style={{ height: \"82.9vh\", marginBottom:\"0px\", backgroundImage:\"url(/vesuvius.jpg)\", backgroundRepeat:'no-repeat',backgroundSize:\"cover\"}}>\n                    <div className=\"homepageContainer\">\n                        <div>\n                            <h1>\n                                SnoffleStein Blogs (Admin)\n                            </h1>\n                            {user ?\n                                <div className=\"linkContainer\">\n                                    <Link to=\"/admin/posts\" className=\"link\">  <button className=\"homeLink\">  Posts </button> </Link>\n                                </div>\n                                :\n                                <div className=\"linkContainer\">\n                                    <Link to=\"/admin/login\" className=\"link\">  <button className=\"homeLink\">  Sign In  </button> </Link>\n                                </div>\n                            }\n                        </div>\n                    </div>\n            </Jumbotron>\n\n        </>\n    )\n}\n\nexport default Homepage","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/CommentCreate.jsx",[],["79","80"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Logout.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/LoginSignup.jsx",[],{"ruleId":"81","severity":1,"message":"82","line":13,"column":12,"nodeType":"83","messageId":"84","endLine":13,"endColumn":21},{"ruleId":"85","severity":1,"message":"86","line":33,"column":8,"nodeType":"87","endLine":33,"endColumn":10,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":26,"column":8,"nodeType":"87","endLine":26,"endColumn":10,"suggestions":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":62,"column":33,"nodeType":"97","messageId":"98","endLine":64,"endColumn":86},{"ruleId":"91","replacedBy":"99"},{"ruleId":"93","replacedBy":"100"},{"ruleId":"91","replacedBy":"101"},{"ruleId":"93","replacedBy":"102"},{"ruleId":"81","severity":1,"message":"103","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":49,"column":33,"nodeType":"97","messageId":"98","endLine":51,"endColumn":86},{"ruleId":"81","severity":1,"message":"104","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":17},{"ruleId":"91","replacedBy":"105"},{"ruleId":"93","replacedBy":"106"},"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has a missing dependency: 'setPosts'. Either include it or remove the dependency array. If 'setPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["108"],"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString",["109"],["110"],["109"],["110"],"'ReactHtmlParser' is defined but never used.","'Container' is defined but never used.",["109"],["110"],{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [fetchData]",{"range":"115","text":"116"},"Update the dependencies array to be: [setPosts]",{"range":"117","text":"118"},[833,835],"[fetchData]",[688,690],"[setPosts]"]