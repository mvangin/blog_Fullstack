[{"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx":"2","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js":"3","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js":"6","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js":"7","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx":"8","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx":"9","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx":"10","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js":"11","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/CommentCreate.jsx":"12","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Logout.jsx":"13","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/LoginSignup.jsx":"14","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Login.jsx":"15","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/SignUp.jsx":"16","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Comments.jsx":"17"},{"size":286,"mtime":1608595051580,"results":"18","hashOfConfig":"19"},{"size":2492,"mtime":1608595481996,"results":"20","hashOfConfig":"19"},{"size":1769,"mtime":1608595555410,"results":"21","hashOfConfig":"19"},{"size":2998,"mtime":1608684395918,"results":"22","hashOfConfig":"19"},{"size":3803,"mtime":1612142284018,"results":"23","hashOfConfig":"19"},{"size":141,"mtime":1607445686599,"results":"24","hashOfConfig":"19"},{"size":289,"mtime":1608595509765,"results":"25","hashOfConfig":"19"},{"size":2981,"mtime":1612142285106,"results":"26","hashOfConfig":"19"},{"size":1915,"mtime":1609988456998,"results":"27","hashOfConfig":"19"},{"size":1261,"mtime":1609988424570,"results":"28","hashOfConfig":"19"},{"size":3211,"mtime":1609996375294,"results":"29","hashOfConfig":"19"},{"size":953,"mtime":1608619480151,"results":"30","hashOfConfig":"19"},{"size":275,"mtime":1608596142812,"results":"31","hashOfConfig":"19"},{"size":1033,"mtime":1608595473772,"results":"32","hashOfConfig":"19"},{"size":2448,"mtime":1612081424237,"results":"33","hashOfConfig":"19"},{"size":2369,"mtime":1608624832068,"results":"34","hashOfConfig":"19"},{"size":1367,"mtime":1608618669322,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"8hsp1m",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js",[],["78","79"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx",["80","81"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport {CommentCreate, Comments} from \"../components\"\nimport { useHistory, Link } from \"react-router-dom\"\nimport ReactHtmlParser from 'react-html-parser';\n\n\n\nfunction Post({ match, setPosts, posts }) {\n\n    const [postItem, setPostItem] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n\n    let postID = match.params.id\n\n    const history = useHistory();\n\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPostItem(res.data.posts);\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    function handlePostDelete() {\n        comments.forEach((comment) => {\n            api.deleteCommentByID(postID, comment._id)\n        })\n\n        api.deletePostByID(postID)\n            .then(() => {\n                setPosts(posts.filter((post => post._id !== postID)));\n                history.push(`/admin/posts`);\n            })\n\n    }\n    return (\n        <>\n            <div className='postContainer'>\n                <div className=\"sizeContainer\">\n                    <div>\n                        <div>\n                            <h1 className=\"postTitle\"><b> {postItem.title}  </b> </h1>\n                            <button className=\"postDelete\" onClick={handlePostDelete}> Delete </button>\n                            <Link to={{ pathname:`/admin/posts/${postItem._id}/update`, state: { postItem }}}>\n                                <button className=\"postUpdate\">\n                                    Update\n                              </button>\n                            </Link>\n                        </div>\n\n                        <div style={{ clear: \"both\" }} className=\"postAuthor\">\n                            By <i> {postItem.username ? postItem.username.username : null} </i>\n                        </div>\n                        <br />\n                        {ReactHtmlParser(postItem.content)}\n                    </div>\n\n                    <div>\n                        <CommentCreate postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <Comments comments={comments} setComments={setComments} />\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n",["82","83"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js",[],["84","85"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx",["86","87"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Container from 'react-bootstrap/Container'\n\n\n\n\nfunction PostList({ setPosts, posts }) {\n\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        async function fetchData() {\n            await api.getAllPosts().then(postsRes => {\n                let data = postsRes.data.data\n                setPosts(data)\n                setIsLoading(false);\n            })\n        }\n        fetchData();\n    }, [])\n\n\n    return (\n        <Container>\n            {isLoading ?\n                <div className=\"d-flex justify-content-center \">\n                    <Spinner animation=\"border\" role=\"status\" id=\"spinner\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n                :\n\n                <div className=\"d-flex justify-content-center justify-content-md-around flex-wrap text-center\">\n                    {\n                        posts.map((item) => {\n                            return (\n                                <Card key={nanoid()} style={{ width: '18rem', margin: '10px' }}>\n                                    <Card.Body>\n                                        <Card.Header><b>{item.title} </b> {item.published ? <div className=\"text-success\"> Published </div> : <div className=\"text-danger\"> Unpublished</div>} </Card.Header>\n                                        <Card.Title> <img src=\"/stockBlog.png\" style={{width:\"100%\"}}/> </Card.Title>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">\n                                            {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                                        </Card.Subtitle>\n\n                                        <Link className=\"text-white\" to={`/admin/posts/${item._id}`} >\n                                            <Button>\n                                                See More\n                                            </Button>\n                                        </Link>\n\n\n                                    </Card.Body>\n\n                                </Card>\n\n                                /*  <div key={nanoid()}>\n                                       <Link to={`/posts/${item._id}`}> <b> {item.title}  </b></Link>\n                               : {item.content}. {item.username ? <span> Posted by: <i>{item.username.username} </i> </span> : null}\n                                   </div>\n                                   */\n                            )\n                        })\n\n                    }\n                </div >\n            }\n        </Container>\n\n    )\n\n}\n\n\nexport default PostList\n\n\n","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx",["88","89","90"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx",["91","92","93","94"],"import React, { useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\"\nimport api from '../api'\nimport ReactHtmlParser from 'react-html-parser';\nimport { Editor } from \"@tinymce/tinymce-react\";\n\n\nfunction PostUpdate({ match }) {\n    const history = useHistory();\n    let location = useLocation();\n\n    console.log(location)\n    const [title, setTitle] = useState(() => location ? location.state.postItem.title : null);\n    const [content, setContent] = useState(() => location ? location.state.postItem.content : null);\n    const [checked, setChecked] = useState(() => location ? location.state.postItem.published : false);\n\n    let postID = match.params.id\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (title.trim() == \"\" || content.trim() == \"\") {\n            return\n        }\n\n        api.updatePostByID(postID, { title, content, checked, postID })\n            .then(\n                history.push(`/admin/posts`)\n            ).catch(error => console.log(error))\n    }\n\n    return (\n        <>\n            <div className=\"container createPostContainer\">\n                <form onSubmit={handleSubmit} className=\"postForm\">\n\n                    <div className=\"text-center m-2\">\n                        Title\n                    </div>\n\n                    <label>\n                        <input type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value); }}  className=\"postInput\" />\n                    </label>\n\n\n                    <div className=\"text-center m-2\">\n                        Content \n                    </div>\n                    <label>\n                        <Editor init={{\n                            height: 300,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                'undo redo | formatselect | bold italic backcolor | \\\n                                 alignleft aligncenter alignright alignjustify | \\\n                                bullist numlist outdent indent | removeformat | help'\n                        }} apiKey={process.env.REACT_APP_TINYMCE} value={content} onEditorChange={(content) => { setContent(content); }} placeholder=\"content\" className=\"postInput\" />\n                    </label>\n\n\n                    <label className=\"postCheckedContainer\">\n                        Publish\n                        <input type=\"checkbox\" checked={checked} onChange={() => setChecked(!checked)} className=\"postChecked\" />\n                    </label>\n\n                    <input type=\"submit\" value=\"Update Post\" className=\"postInput submit\" />\n                </form>\n            </div>\n        </>\n    )\n\n}\nexport default PostUpdate",["95","96"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/NavbarComponent.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Homepage.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/api/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/CommentCreate.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Logout.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/LoginSignup.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Login.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/SignUp.jsx",[],["97","98"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/Comments.jsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":13,"column":12,"nodeType":"105","messageId":"106","endLine":13,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":33,"column":8,"nodeType":"109","endLine":33,"endColumn":10,"suggestions":"110"},{"ruleId":"99","replacedBy":"111"},{"ruleId":"101","replacedBy":"112"},{"ruleId":"99","replacedBy":"113"},{"ruleId":"101","replacedBy":"114"},{"ruleId":"107","severity":1,"message":"115","line":28,"column":8,"nodeType":"109","endLine":28,"endColumn":10,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":48,"column":54,"nodeType":"119","endLine":48,"endColumn":104},{"ruleId":"103","severity":1,"message":"120","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"121","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":80,"column":33,"nodeType":"124","messageId":"125","endLine":82,"endColumn":86},{"ruleId":"103","severity":1,"message":"126","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":22,"column":26,"nodeType":"129","messageId":"130","endLine":22,"endColumn":28},{"ruleId":"127","severity":1,"message":"128","line":22,"column":50,"nodeType":"129","messageId":"130","endLine":22,"endColumn":52},{"ruleId":"122","severity":1,"message":"123","line":58,"column":33,"nodeType":"124","messageId":"125","endLine":60,"endColumn":86},{"ruleId":"99","replacedBy":"131"},{"ruleId":"101","replacedBy":"132"},{"ruleId":"99","replacedBy":"133"},{"ruleId":"101","replacedBy":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["137"],["135"],["136"],["135"],["136"],"React Hook useEffect has a missing dependency: 'setPosts'. Either include it or remove the dependency array. If 'setPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["138"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'nanoid' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'ReactHtmlParser' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["135"],["136"],["135"],["136"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [fetchData]",{"range":"143","text":"144"},"Update the dependencies array to be: [setPosts]",{"range":"145","text":"146"},[833,835],"[fetchData]",[739,741],"[setPosts]"]