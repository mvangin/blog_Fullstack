[{"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js":"1","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx":"2","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js":"3","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx":"4","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx":"5","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/SignUp.jsx":"6","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Login.jsx":"7","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js":"8","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js":"9","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx":"10"},{"size":441,"mtime":1607455978205,"results":"11","hashOfConfig":"12"},{"size":2516,"mtime":1608278595500,"results":"13","hashOfConfig":"12"},{"size":1769,"mtime":1608255003010,"results":"14","hashOfConfig":"12"},{"size":2422,"mtime":1607671101191,"results":"15","hashOfConfig":"12"},{"size":2712,"mtime":1608279401919,"results":"16","hashOfConfig":"12"},{"size":1747,"mtime":1608276424887,"results":"17","hashOfConfig":"12"},{"size":2500,"mtime":1608276503802,"results":"18","hashOfConfig":"12"},{"size":141,"mtime":1607445686599,"results":"19","hashOfConfig":"12"},{"size":75,"mtime":1607445686595,"results":"20","hashOfConfig":"12"},{"size":2758,"mtime":1608279450658,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"8hsp1m",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/index.js",[],["44","45"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Post.jsx",["46","47"],"import React, { useEffect, useState } from 'react'\nimport api from '../api'\nimport CommentCreate from \"./CommentCreate\"\nimport Comments from \"./Comments\"\nimport { useHistory, Link } from \"react-router-dom\"\nimport ReactHtmlParser from 'react-html-parser';\n\n\n\nfunction Post({ match, setPosts, posts }) {\n\n    const [postItem, setPostItem] = useState([]);\n    const [comments, setComments] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n\n    let postID = match.params.id\n\n    const history = useHistory();\n\n\n\n    async function fetchData() {\n        await api.getPostByID(postID)\n            .then(res => {\n                setPostItem(res.data.posts);\n                setComments(res.data.comments);\n                setIsLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchData();\n    }, [])\n\n    function handlePostDelete() {\n        comments.forEach((comment) => {\n            api.deleteCommentByID(postID, comment._id)\n        })\n\n        api.deletePostByID(postID)\n            .then(() => {\n                setPosts(posts.filter((post => post._id !== postID)));\n                history.push(`/admin/posts`);\n            })\n\n    }\n    return (\n        <>\n            <div className='postContainer'>\n                <div className=\"sizeContainer\">\n                    <div>\n                        <div>\n                            <h1 className=\"postTitle\"><b> {postItem.title}  </b> </h1>\n                            <button className=\"postDelete\" onClick={handlePostDelete}> Delete </button>\n                            <Link to={{ pathname:`/admin/posts/${postItem._id}/update`, state: { postItem }}}>\n                                <button className=\"postUpdate\">\n                                    Update\n                              </button>\n                            </Link>\n                        </div>\n\n                        <div style={{ clear: \"both\" }} className=\"postAuthor\">\n                            By <i> {postItem.username ? postItem.username.username : null} </i>\n                        </div>\n                        <br />\n                        {ReactHtmlParser(postItem.content)}\n                    </div>\n\n                    <div>\n                        <CommentCreate postID={postID} fetchData={fetchData} />\n                    </div>\n\n                    <Comments comments={comments} setComments={setComments} />\n                </div>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default Post\n\n","/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/app/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostList.jsx",["48","49"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostCreate.jsx",["50","51","52"],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/SignUp.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/Login.jsx",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/components/index.js",[],"/home/marcus/Desktop/websites/express-blogAPI/adminClient/src/pages/PostUpdate.jsx",["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":14,"column":12,"nodeType":"61","messageId":"62","endLine":14,"endColumn":21},{"ruleId":"63","severity":1,"message":"64","line":34,"column":8,"nodeType":"65","endLine":34,"endColumn":10,"suggestions":"66"},{"ruleId":"59","severity":1,"message":"60","line":12,"column":12,"nodeType":"61","messageId":"62","endLine":12,"endColumn":21},{"ruleId":"63","severity":1,"message":"67","line":25,"column":8,"nodeType":"65","endLine":25,"endColumn":10,"suggestions":"68"},{"ruleId":"59","severity":1,"message":"69","line":14,"column":12,"nodeType":"61","messageId":"62","endLine":14,"endColumn":17},{"ruleId":"59","severity":1,"message":"70","line":14,"column":19,"nodeType":"61","messageId":"62","endLine":14,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":58,"column":33,"nodeType":"73","messageId":"74","endLine":60,"endColumn":86},{"ruleId":"59","severity":1,"message":"75","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":49,"column":33,"nodeType":"73","messageId":"74","endLine":51,"endColumn":86},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["78"],"React Hook useEffect has a missing dependency: 'setPosts'. Either include it or remove the dependency array. If 'setPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["79"],"'error' is assigned a value but never used.","'setError' is assigned a value but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'ReactHtmlParser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [fetchData]",{"range":"84","text":"85"},"Update the dependencies array to be: [setPosts]",{"range":"86","text":"87"},[857,859],"[fetchData]",[642,644],"[setPosts]"]